version: "3"

services:
    database:
        image: "postgres:13.4"
        container_name: "super-database"
        ports:
            - "5432:5432"
        environment:
            POSTGRES_PASSWORD: password
        volumes:
            - ./db-init/initialize-databases.sql:/docker-entrypoint-initdb.d/init.sql

    monitoring:
        image: "prom/prometheus:v2.30.3"
        container_name: "super-visor"
        ports:
          - 9090:9090
        volumes:
          - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml

    zookeeper:
        image: quay.io/strimzi/kafka:0.23.0-kafka-2.8.0
        container_name: "zookeeper"
        command: [
                "sh", "-c",
                "bin/zookeeper-server-start.sh config/zookeeper.properties"
        ]
        ports:
            - "2181:2181"
        environment:
            LOG_DIR: /tmp/logs

    kafka:
        hostname: kafka
        image: docker.vectorized.io/vectorized/redpanda:v21.11.2
        command:
        - redpanda
        - start
        - --smp
        - '1'
        - --reserve-memory
        - 0M
        - --overprovisioned
        - --node-id
        - '0'
        - --kafka-addr
        - PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
        - --advertise-kafka-addr
        - PLAINTEXT://kafka:29092,OUTSIDE://kafka:9092

    kafdrop:
        image: obsidiandynamics/kafdrop
        ports:
            - "9092:9092"
        environment:
            LOG_DIR: "/tmp/logs"
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
            KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
